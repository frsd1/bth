#Kursmoment 1 - PHP-baserade och MVC-inspirerade ramverk

##Inledning
I detta kursmoment ska man bekanta sig med ramverket för kursen , Anax-mvc, och därefter göra några justeringar så det fungerar på sin egen webbplats enligt specifikationen i uppgiften.  
 
##Sammanfattning
Det var mycket nytt för mig i detta kursmoment men även moment/programvaror jag arbetat med tidigare. Jag tänker då på versionshanteringen och att skriva i markdown vilket är väldigt praktiskt och tidsbesparande, (skriver en del i Latex för övrigt). Min uppfattning av Anax-MVC är positivt eftersom "var sak på sin plats" flyttat fram ett steg till ifrån Anax-base i OOPHP-kursen.<br> I artikeln *Objektorienterade konstruktioner för ramverk med PHP* fick jag en bra och snabb sammanfatting över vad jag ska titta extra. Eftersom jag programmerar i Java/C# var vissa begrepp bekanta andra inte. *PHP the right way* fick jag en enkel och lärorika sammanfattning av hur jag ska strukturera min kod då den blir mer omfattande.<br><br> Jag läser även kursen OOPHP och därför har jag en bra grund när jag läste koden i katalogstrukturen för Anax-MVC. I OOPHP-kursen ändrar man namn på Anax-base till något eget. Detta gjorde jag även här, men det fungerade icke för mig. Det var bara att börja om med Anax-mvc. Det var även en del tidsödande strul med implementeringen av source.php men annars flöt det på smidigt. Förutom vad som skulle genomföras enligt uppgiften ändrade jag lite i css-filen så att bland annat menyn fick en annan färgsättning.<br>För utvecklingen av program och dokumentation arbetar jag i vi och Gedit och på min laptop har jag en installation av Ubuntu. Filöverföringsprogrammet Filezilla, som du rekommenderar, använder jag för att flytta filer till BTH's server. Avslutningsvis laddade jag upp filerna till Github. Här snubblade jag till eftersom när jag hämtade hem Anax-MVC så fick jag med en .git-katalogen. Denna katalog tog jag inte bort och då jag skulle överföra till Github fanns i katalogstrukturen <b>två</b>.git kataloger. Jag fick lägga lite tid på att förstå vad som var fel då Git klagade och inte ville överföra katalogstrukturen till Github. När detta var löst placerade jag en regler i filen .gitignore. I filen har jag regeln <b>*.*~</b> vilket låter Github ignorera de temporära filerna i ubuntu.   

